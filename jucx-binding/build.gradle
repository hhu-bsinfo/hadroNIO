plugins {
    id 'java-library'
}

group 'de.hhu.bsinfo'
version = getProperty('projectVersion')

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':core')

    // The official JUCX version causes a large memory leak. Once the pull requests #8829 is part of a release, the official version can be used again.
    if (file("jucx-${jucxVersion}.jar").exists()) {
        implementation files("jucx-${jucxVersion}.jar")
    } else {
        implementation "org.openucx:jucx:${jucxVersion}"
    }

    implementation "org.slf4j:slf4j-api:${slf4jVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
}

test {
    useJUnitPlatform()
}