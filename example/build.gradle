plugins {
    id 'idea'
    id 'java'
    id 'application'
    id 'com.google.protobuf' version "${protobufPluginVersion}"
}

group 'de.hhu.bsinfo'
version = getProperty('projectVersion')

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

application.setApplicationName("hadronio")
application.getMainClass().set("de.hhu.bsinfo.hadronio.example.Application")

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':provider')

    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    implementation "info.picocli:picocli:${picocliVersion}"
    implementation "com.esotericsoftware:kryo:${kryoVersion}"
    implementation "io.netty:netty-transport:${nettyVersion}"
    implementation "io.netty:netty-buffer:${nettyVersion}"
    implementation "net.openhft:affinity:${threadAffinityVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    compileOnly "org.apache.tomcat:annotations-api:${tomcatVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

test {
    useJUnitPlatform()
}

startScripts {
    doLast {
        def unixScriptFile = file getUnixScript()
        def line = unixScriptFile.text.lines().find{it.startsWith('CLASSPATH=$APP_HOME')} as CharSequence
        unixScriptFile.text  = unixScriptFile.text.replace(line, line + ':$CLASSPATH')
    }
}